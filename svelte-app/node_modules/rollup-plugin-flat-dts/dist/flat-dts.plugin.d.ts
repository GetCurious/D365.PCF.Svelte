/// <reference lib="es2019" />
/// <reference path="flat-dts.api.d.ts" />
declare module "rollup-plugin-flat-dts" {
    import type { OutputPlugin } from "rollup";
    import type { FlatDts } from "rollup-plugin-flat-dts/api";
    export type { FlatDts };
    /**
     * Creates type definitions flattening plugin instance.
     *
     * @param dtsOptions - Type definition flattening options.
     *
     * @returns Rollup output plugin instance.
     */
    export default function flatDtsPlugin(dtsOptions?: FlatDts.Options): OutputPlugin;
}

declare module "rollup-plugin-flat-dts" {
    import type { FlatDts } from "rollup-plugin-flat-dts/api";
    export function testDts(root: string, options?: FlatDts.Options): Promise<FlatDts>;
}

declare module "rollup-plugin-flat-dts" {
    export class BaseClass {
        foo(): string;
    }
    export class TestClass extends BaseClass {
        foo(): string;
    }
}

declare module "rollup-plugin-flat-dts" {
    export const foo = "abc";
    export const bar: number;
}

declare module "rollup-plugin-flat-dts" {
    export interface Entry1 {
        readonly name: 'entry1';
    }
}

declare module "rollup-plugin-flat-dts" {
    export interface Entry2 {
        readonly name: 'entry2';
    }
}

declare module "rollup-plugin-flat-dts" {
    export interface Root {
        readonly name: 'root';
    }
}

declare module "rollup-plugin-flat-dts" {
    export function testFunction(prefix: string, ...args: string[]): string;
}

declare module "rollup-plugin-flat-dts" {
    export interface Imported {
        readonly name: 'imported';
    }
}

declare module "rollup-plugin-flat-dts" {
    export interface TestInterface {
        readonly foo: string;
    }
}
//# sourceMappingURL=flat-dts.plugin.d.ts.map
